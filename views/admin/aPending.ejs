<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard | Admin</title>
    <link rel="shortcut icon" href="./../static/favicon2.png" type="image/x-icon">
    <link rel="stylesheet" href="./adminDashboard.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css"
        integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Moo+Lah+Lah&family=Roboto+Condensed:wght@300&family=Rubik:wght@300&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css"
        integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=" crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.googleapis.com">

    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <link rel="stylesheet" href="./../home.css">


</head>

<body>
    <!-- navBar ====================================== -->
    <%- include('../../partials/navBar') %>



        <div class="dashboard-container">

            <!-- Admin Dashboard Bullets ======================== -->
            <%- include('aBullets') %>

                <!-- Admin Dashboard Body ==========================-->


                <div class="dashboard-body">

                    <!-- pending Applications will be visible here-->
                    <h3 class="pending-heading">Pending Applications</h3>

                    <div class="pending-details-container" id="pending-container">


                        <!-- <div class="pending-details-card">

                        <div class="data-box">
                        <div> Name : <span>Arindam Halder</span> </div>
                                <div> Email : <span>halderarindam10000@gmail.com</span> </div>
                                <div>Mobile No. : <span>1234567890</span></div>
                                <div> Gender : <span>Male</span> </div>
                                <div> Room Type : <span>Single</span> </div>
                                <div> College : <span>Jadavpur University</span> </div>
                        </div>

                        <div class="card-button-box">
                                <i class="fas fa-envelope" id="payment-mail"></i>
                                <div class="hostelNoButtons">
                                    <span>1</span>
                                    <span>2</span>
                                    <span>3</span>
                                </div>
                                <i class="fas fa-trash-alt del-trash" id="delete-mail"></i>
                            </div>

                        </div>
 -->

                    </div>


                </div>

        </div>


        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
            crossorigin="anonymous"></script>

        <script>

            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })



            const allApplicants = fetch("/applicants").then((res) => {
                return res.json();
            }).then((dataArray) => {
                // console.log(dataArray);
                dataArray.forEach((data) => {

                    const pendingContainer = document.getElementById("pending-container");

                    const pendingCard = document.createElement("div");
                    pendingCard.classList.add("pending-details-card");
                    pendingContainer.appendChild(pendingCard);

                    const dataBox = document.createElement("div");
                    dataBox.classList.add("data-box");
                    pendingCard.appendChild(dataBox);

                    const a_name = document.createElement("div");
                    // a_name.id = "a_name";
                    a_name.innerHTML = `Name : ${data.fullname}`;
                    dataBox.appendChild(a_name);

                    const a_email = document.createElement("div");
                    // a_email.id = "a_email";
                    a_email.innerHTML = `Email : ${data.email}`;
                    dataBox.appendChild(a_email);

                    const a_mobileNo = document.createElement("div");
                    a_mobileNo.innerHTML = `Mobile No. : ${data.mobileNo}`;
                    dataBox.appendChild(a_mobileNo);

                    const a_gender = document.createElement("div");
                    a_gender.innerHTML = `Gender : ${data.gender}`;
                    dataBox.appendChild(a_gender);

                    const a_roomType = document.createElement("div");
                    // a_roomType.id = "a_roomType";
                    a_roomType.innerHTML = `Room Type : ${data.roomType}`;
                    dataBox.appendChild(a_roomType);

                    const a_college = document.createElement("div");
                    a_college.innerHTML = `College : ${data.college}`;
                    dataBox.appendChild(a_college);


                    const buttonBox = document.createElement("div");
                    buttonBox.classList.add("card-button-box");
                    pendingCard.appendChild(buttonBox);

                    const i_gmail = document.createElement("i");
                    i_gmail.classList.add("fas", "fa-envelope");
                    i_gmail.id = "payment-mail"
                    buttonBox.appendChild(i_gmail);


                    const hostelNumbers = document.createElement("div");
                    hostelNumbers.classList.add("hostelNoButtons");
                    buttonBox.appendChild(hostelNumbers);

                    const no1 = document.createElement("span");
                    no1.innerHTML = "H1";
                    const no2 = document.createElement("span");
                    no2.innerHTML = "H2";
                    const no3 = document.createElement("span");
                    no3.innerHTML = "H3";
                    hostelNumbers.appendChild(no1);
                    hostelNumbers.appendChild(no2);
                    hostelNumbers.appendChild(no3);

                    const i_delete = document.createElement("i");
                    i_delete.classList.add("fas", "fa-trash-alt", "del-trash");
                    i_delete.id = "delete-mail";
                    buttonBox.appendChild(i_delete);

                    i_delete.addEventListener("click", (e) => {

                        e.preventDefault();
                        const recipientName = data.fullname;
                        const recipientEmail = data.email;
                        const roomType = data.roomType;
                        const deleteMailData = { recipientName, recipientEmail };
                        // console.log(deleteMailData);

                        Params = {
                            method: "POST",
                            headers: {
                                "content-type": "application/json; charset=UTF-8"
                            },
                            body: JSON.stringify(deleteMailData)
                        }
                        fetch('/reject', Params)
                            .then(data => { return data.json() })
                            .then(res => { })
                            .catch(err => { console.log(err) })

                        const deletePendingApplicant = fetch(`/applicants/${data._id}`, {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application/json"
                            }
                        }).then((data) => {
                            location.reload(true);
                        }).catch((err) => {
                            console.log(err);
                        })
                    })

                    i_gmail.addEventListener("click", (e) => {
                        e.preventDefault();

                        const recipientName = data.fullname;
                        const recipientEmail = data.email;
                        const roomType = data.roomType;
                        const singleMailData = { recipientName, recipientEmail };

                        Params = {
                            method: "POST",
                            headers: {
                                "content-type": "application/json; charset=UTF-8"
                            },
                            body: JSON.stringify(singleMailData)
                        }
                        if (roomType === "Sharing") {
                            fetch('/sSharing', Params)
                                .then(data => { return data.json() })
                                .then(res => { })
                                .catch(err => { console.log(err) })
                        }
                        else {
                            fetch('/sSingle', Params)
                                .then(data => { return data.json() })
                                .then(res => { })
                                .catch(err => { console.log(err) })
                        }
                    })



                    no1.addEventListener("click", () => {
                        let newHosteliteData = data;
                        newHosteliteData.hostelNo = '1';
                        newHosteliteData.roomNo = '';
                        newHosteliteData.isPaid = 'true';

                        const recipientName = data.fullname;
                        const recipientEmail = data.email;
                        // const roomType = data.roomType;
                        const h1MailData = { recipientName, recipientEmail };

                        Params = {
                            method: "POST",
                            headers: {
                                "content-type": "application/json; charset=UTF-8"
                            },
                            body: JSON.stringify(h1MailData)
                        }
                        fetch('/h1', Params)
                                .then(data => { return data.json() })
                                .then(res => { })
                                .catch(err => { console.log(err) })


                        const newHostelite_h1 = fetch("/hostelites", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(newHosteliteData)
                        }).then(res => res.json())
                            .then((data) => {
                                const deletePendingApplicant = fetch(`/applicants/${data._id}`, {
                                    method: "DELETE",
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                }).then((data) => {
                                    location.reload(true);
                                }).catch((err) => {
                                    console.log(err);
                                })
                            }).catch((err) => {
                                console.log(err);
                            })
                    })
                    no2.addEventListener("click", () => {
                        let newHosteliteData = data;
                        newHosteliteData.hostelNo = '2';
                        newHosteliteData.roomNo = '';
                        newHosteliteData.isPaid = 'true';

                        const recipientName = data.fullname;
                        const recipientEmail = data.email;
                        // const roomType = data.roomType;
                        const h2MailData = { recipientName, recipientEmail };

                        Params = {
                            method: "POST",
                            headers: {
                                "content-type": "application/json; charset=UTF-8"
                            },
                            body: JSON.stringify(h2MailData)
                        }
                        fetch('/h2', Params)
                                .then(data => { return data.json() })
                                .then(res => { })
                                .catch(err => { console.log(err) })



                        const newHostelite_h2 = fetch("/hostelites", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(newHosteliteData)
                        }).then(res => res.json())
                            .then((data) => {
                                const deletePendingApplicant = fetch(`/applicants/${data._id}`, {
                                    method: "DELETE",
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                }).then((data) => {
                                    location.reload(true);
                                }).catch((err) => {
                                    console.log(err);
                                })
                            }).catch((err) => {
                                console.log(err);
                            })
                    })
                    no3.addEventListener("click", () => {
                        let newHosteliteData = data;
                        newHosteliteData.hostelNo = '3';
                        newHosteliteData.roomNo = '';
                        newHosteliteData.isPaid = 'true';


                        const recipientName = data.fullname;
                        const recipientEmail = data.email;
                        // const roomType = data.roomType;
                        const h3MailData = { recipientName, recipientEmail };

                        Params = {
                            method: "POST",
                            headers: {
                                "content-type": "application/json; charset=UTF-8"
                            },
                            body: JSON.stringify(h3MailData)
                        }
                        fetch('/h3', Params)
                                .then(data => { return data.json() })
                                .then(res => { })
                                .catch(err => { console.log(err) })



                        const newHostelite_h3 = fetch("/hostelites", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(newHosteliteData)
                        }).then(res => res.json())
                            .then((data) => {
                                const deletePendingApplicant = fetch(`/applicants/${data._id}`, {
                                    method: "DELETE",
                                    headers: {
                                        "Content-Type": "application/json"
                                    }
                                }).then((data) => {
                                    location.reload(true);
                                }).catch((err) => {
                                    console.log(err);
                                })
                            }).catch((err) => {
                                console.log(err);
                            })
                    })

                })


            }).catch((error) => {
                console.log(error);
            });

        </script>

</body>

</html>